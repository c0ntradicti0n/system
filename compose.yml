version: "3"
services:
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    build: nginx
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    env_file:
      - .env
    environment:
        HOST: $HOST
        EMAIL: $EMAIL
    depends_on:
      - server
      - web
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-enabled/:/etc/nginx/sites-enabled/
      - ./certs:$CERTS

  server:

    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

    restart: unless-stopped

    build: server
    container_name: server
    env_file:
      - .env
    tty: true
    user: 1000:1000
    ports:
      - "5001:5000"
    environment:
      DEBUG: "true"
      HOST: $HOST
      SYSTEM: /system
      PYTHONIOENCODING: utf-8
    extra_hosts:
        - "host.docker.internal:host-gateway"
    volumes:
      - "$SYSTEM:/system"
      - "./server:/app"
      - "./lib:/app/lib"

  service:

    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    build:
       context: service
       args:
         SYSTEM: /system

    restart: unless-stopped

    container_name: service
    env_file:
      - .env
    tty: true
    user: 1000:1000
    ports:
      - "5000:5000"
    environment:
      DEBUG: "true"
      HOST: $HOST
      SYSTEM: /system
      PYTHONIOENCODING: utf-8
      HAYSTACK_TELEMETRY_ENABLED: "False"
      HF_HUB_DISABLE_TELEMETRY: True
      DISABLE_TELEMETRY: True
    volumes:
      - "$SYSTEM:/system"
      - "./service:/app"
      - "./lib:/app/lib"

      - "./.cache-cr:/chroma:rw"
      - "./.cache-hf:/.cache:rw"
  integrator:

    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    ports:
      - "9876:5000"
    build:
      context: integrator
      args:
        SYSTEM: /system

    restart: unless-stopped

    container_name: integrator
    env_file:
      - .env
    tty: true
    user: 1000:1000

    environment:
      DEBUG: "true"
      HOST: $HOST
      SYSTEM: /system
      PYTHONIOENCODING: utf-8
      HAYSTACK_TELEMETRY_ENABLED: "False"
      HF_HUB_DISABLE_TELEMETRY: True
      DISABLE_TELEMETRY: True
      NO_IMAGES: "true"
    volumes:
      - "$SYSTEM:/system"
      - "./integrator:/app"
      - "./classifier:/app/classifier"
      - "./lib:/app/lib"
      - "./.cache-cr:/chroma:rw"
      - "./.cache-hf:/.cache:rw"
      - "./.cache-mpl:/.config:rw"

  linker:
    profiles:
      - linker
    mem_limit: 10g

    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    build:
      context: linker
      args:
         SYSTEM: /system
    container_name: linker
    env_file:
      - .env
    tty: true
    user: 1000:1000
    environment:
      DEBUG: "true"
      HOST: $HOST
      SYSTEM: /system
      PYTHONIOENCODING: utf-8
      HAYSTACK_TELEMETRY_ENABLED: "False"
      HF_HUB_DISABLE_TELEMETRY: True
      DISABLE_TELEMETRY: True
    volumes:
      - "$SYSTEM:/system"
      - "./service:/app"
      - "./lib:/app/lib"

      - "./.cache-cr-linker:/chroma:rw"
      - "./.cache-hf:/.cache:rw"


  classifier:
    profiles:
      - classifier
    mem_limit: 10g
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    build:
      context: classifier
      args:
         SYSTEM: /system
    container_name: classifier
    env_file:
      - .env
    tty: true
    user: 1000:1000
    environment:
      DEBUG: "true"
      HOST: $HOST
      SYSTEM: /system
      PYTHONIOENCODING: utf-8
      HAYSTACK_TELEMETRY_ENABLED: "False"
      HF_HUB_DISABLE_TELEMETRY: True
      DISABLE_TELEMETRY: True
    volumes:
      - "$SYSTEM:/system"
      - "./classifier:/app"
      - "./lib:/app/lib"

      - "./.cache-cr:/chroma:rw"
      - "./.cache-hf:/.cache:rw"
      - "./.models-classifier:/app/models:rw"


  web:

    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    build:
      context: web
      target:  $TARGET
    container_name: web
    volumes:
      - ./web/src:/app/src
    tty: true
    env_file:
      - .env



